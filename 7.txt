//Write an Embedded C program for Timer programming ISR based buzzer on/off.


#include <xc.h>
#include <pic18f4550.h>

#define Buzzer LATAbits.LATA5 // Define buzzer pin

unsigned int count = 0;

void Timer1ISR()
{
    if (TMR1IF == 1)
    {
        TMR1L = 0x20;
        TMR1H = 0xD1;
        count++;
        if (count >= 1000)
        {
            Buzzer = ~Buzzer; // Toggle buzzer pin
            count = 0;
        }
        TMR1IF = 0;
    }
}

void main(void)
{
    TRISB = 0; // Set PORTB as output
    TRISAbits.TRISA5 = 0; // Set buzzer pin (RA5) as output

    GIE = 1; // Enable global interrupts
    PEIE = 1; // Enable peripheral interrupts
    TMR1IE = 1; // Enable Timer1 interrupt
    TMR1IF = 0; // Clear Timer1 interrupt flag

    /* Configure Timer1: 16-bit mode, no prescaler, internal clock, timer OFF */
    T1CON = 0x80;
    TMR1L = 0x20;
    TMR1H = 0xD1;
    TMR1ON = 1; // Start Timer1

    while (1)
	
    return;
}
